---
apiVersion: v1
kind: Template
metadata:
  name: zed-attack-proxy
parameters:
- name: SOURCE_IMAGE_NAME
  displayName: Container Image for deployment
  description: The container image in the form of <image name> (No Tags or registry hosts)
  value: 'zed-attack-proxy'
  required: true
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    generation: 1
    labels:
      app: ${SOURCE_IMAGE_NAME}
    name: ${SOURCE_IMAGE_NAME}-is
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: ${SOURCE_IMAGE_NAME}
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: ${SOURCE_IMAGE_NAME}
    name: ${SOURCE_IMAGE_NAME}-dc
  spec:
    replicas: 1
    selector:
      app: ${SOURCE_IMAGE_NAME}
      deploymentconfig: ${SOURCE_IMAGE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources:
        limits:
          cpu: "2"
          memory: 2Gi
      type: Recreate
    template:
      metadata:
        labels:
          app: ${SOURCE_IMAGE_NAME}
          deploymentconfig: ${SOURCE_IMAGE_NAME}
      spec:
        containers:
        - command:
          - 'uid_entrypoint.sh'
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 45
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${SOURCE_IMAGE_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${SOURCE_IMAGE_NAME}
        from:
          kind: ImageStreamTag
          name: ${SOURCE_IMAGE_NAME}:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${SOURCE_IMAGE_NAME}
    name: ${SOURCE_IMAGE_NAME}-svc
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8090-tcp
      port: 8090
      protocol: TCP
      targetPort: 8090
    selector:
      deploymentconfig: ${SOURCE_IMAGE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${SOURCE_IMAGE_NAME}
    name: ${SOURCE_IMAGE_NAME}-route
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${SOURCE_IMAGE_NAME}-svc
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${SOURCE_IMAGE_NAME}
    name: ${SOURCE_IMAGE_NAME}-webswing
  spec:
    port:
      targetPort: 8090-tcp
    to:
      kind: Service
      name: ${SOURCE_IMAGE_NAME}-svc
      weight: 100
    wildcardPolicy: None